name: ShiftLeft Analysis

on:
  pull_request:

env:
  SHIFTLEFT_ACCESS_TOKEN: ${{ secrets.SHIFTLEFT_ACCESS_TOKEN }}
  
jobs:
  NextGen-Static-Analysis:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Environment for Analysis
      run: |
        echo -e "Head Ref  : " $GITHUB_HEAD_REF
        echo -e "Base Ref  : " $GITHUB_BASE_REF
        export SHA=$(git rev-parse remotes/origin/$GITHUB_HEAD_REF)
        export STATUS_URL="${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/statuses/$SHA"
        echo -e "STATUS_URL=$STATUS_URL" >> $GITHUB_ENV
        export COMMENT_URL="${GITHUB_API_URL}/repos/${GITHUB_REPOSITORY}/issues/${{ github.event.number }}/comments"
        echo -e "COMMENT_URL=$COMMENT_URL" >> $GITHUB_ENV
        curl -X POST -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" $STATUS_URL \
          -d '{ "context": "Set Build Environment", "description": "Create working build environment", "state": "success" }'

    - name: Download ShiftLeft CLI
      run: |
        curl https://cdn.shiftleft.io/download/sl > ${GITHUB_WORKSPACE}/sl && chmod a+rx ${GITHUB_WORKSPACE}/sl
        curl -X POST -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" ${{ env.STATUS_URL }} \
          -d '{ "context": "Download ShiftLeft", "description": "Download ShiftLeft NGSAST CPG generation agent", "state": "success" }'

    - name: Build JAR
      run: |
        mvn clean install
        curl -X POST -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" ${{ env.STATUS_URL }} \
          -d '{ "context": "Build JAR", "description": "Build succeeded", "state": "success" }'
      
    - name: Perform Analysis
      run: |
        export SCANID=$( ./sl analyze --java --app HSLgithub --cpg --sca --tag \
          branch=${{ github.head_ref || steps.extract_branch.outputs.branch }} \
          --container ubuntu:22.04 \
          --wait target/hello-shiftleft-0.0.1.jar | \
          grep -i "The Scan ID for" | \
          cut -d ' ' -f8 )
        echo -e "\n\n\nScan ID = $SCANID\n\n"
        echo -e "SCANID=$SCANID" >> $GITHUB_ENV
        curl -X POST -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" ${{ env.STATUS_URL }} \
          -d '{ "context": "Analysis Generation", "description": "Analysis generation succeeded", "state": "success" }'
      
    - name: Evaluate Security Posture
      run: |
        ./sl check-analysis --app HSLgithub --target scan.${{ env.SCANID }} > check_analysis.txt 2>&1
        curl -X POST -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" ${{ env.STATUS_URL }} \
          -d '{ "context": "Security Posture Check", "description": "Security posture -- OK", "state": "success" }'
          
    - name: Failure of any previous step processing
      if: ${{ failure() }}
      run: |
        curl -X POST -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" ${{ env.STATUS_URL }} \
          -d '{ "context": "Security Posture Check", "description": "Security posture -- **BAD**", "state": "failure" }'
        gawk -f fmt.awk check_analysis.txt > error_body.txt
        curl -X POST -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" ${{ env.COMMENT_URL }} \
          -d "@error_body.txt"
